{
    "openapi": "3.0.0",
    "info": {
        "title": "Dokumentasi API Layanan Kesehatan Klinik La-Tachzan",
        "version": "1.0.0"
    },
    "paths": {
        "/api/diagnosis": {
            "get": {
                "tags": [
                    "Diagnosis"
                ],
                "summary": "Get list of diagnosis",
                "description": "Returns list of diagnosis",
                "operationId": "getDiagnosisList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Diagnosis"
                ],
                "summary": "Store new diagnosis",
                "description": "Returns diagnosis data",
                "operationId": "storeDiagnosis",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/diagnosis/id": {
            "get": {
                "tags": [
                    "Diagnosis"
                ],
                "summary": "Get diagnosis information",
                "description": "Returns diagnosis data",
                "operationId": "getDiagnosisById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "diagnosis id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Diagnosis"
                ],
                "summary": "Update existing diagnosis",
                "description": "Returns updated diagnosis data",
                "operationId": "updateDiagnosis",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Diagnosis id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Diagnosis"
                ],
                "summary": "Delete existing diagnosis",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteDiagnosis",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Diagnosis id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/doctors": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get Semua Data Dokter",
                "description": "Get Semua Data Dokter",
                "operationId": "index",
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/doctors/{id}": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get doctor information",
                "description": "Returns doctor data",
                "operationId": "getDoctorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Doctor id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/drugs": {
            "get": {
                "tags": [
                    "Drug"
                ],
                "summary": "Get Semua Data Obat",
                "description": "Get Semua Data Obat",
                "operationId": "index",
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Drug"
                ],
                "summary": "Store new obat",
                "description": "Returns drug data",
                "operationId": "storeDrug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/drugs/id": {
            "get": {
                "tags": [
                    "Drug"
                ],
                "summary": "Get drug information",
                "description": "Returns drug data",
                "operationId": "getDrugsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Drug id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Drug"
                ],
                "summary": "Update existing drug",
                "description": "Returns updated drug data",
                "operationId": "updateDrug",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Drug id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Drug"
                ],
                "summary": "Delete existing drug",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteDrug",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Drug id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/lab": {
            "get": {
                "tags": [
                    "Lab"
                ],
                "summary": "Get list of lab",
                "description": "Returns list of lab",
                "operationId": "getLabList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lab"
                ],
                "summary": "Store new lab",
                "description": "Returns lab data",
                "operationId": "storeLab",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/lab/id": {
            "get": {
                "tags": [
                    "Lab"
                ],
                "summary": "Get lab information",
                "description": "Returns lab data",
                "operationId": "getLabById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lab id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lab"
                ],
                "summary": "Update existing lab",
                "description": "Returns updated lab data",
                "operationId": "updateLab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lab id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lab"
                ],
                "summary": "Delete existing lab",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteLab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lab id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/patient": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Get list of patient",
                "description": "Returns list of patient",
                "operationId": "getPatientList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "Store new patient",
                "description": "Returns patient data",
                "operationId": "storePatient",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/patient/id": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Get patien information",
                "description": "Returns patient data",
                "operationId": "getPatientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update existing patient",
                "description": "Returns updated patient data",
                "operationId": "updatePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "Delete existing patient",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/queue": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Get list of queue",
                "description": "Returns list of queue",
                "operationId": "getQueueList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Queue"
                ],
                "summary": "Store new queue",
                "description": "Returns queue data",
                "operationId": "storeQueue",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/queue/id": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Get queue information",
                "description": "Returns queue data",
                "operationId": "getQueueById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Queue id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Queue"
                ],
                "summary": "Update existing queue",
                "description": "Returns updated queue data",
                "operationId": "updateQueue",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Queue id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Queue"
                ],
                "summary": "Delete existing queue",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteQueue",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Queue id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/room": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get list of room",
                "description": "Returns list of room",
                "operationId": "getRoomtList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Store new room",
                "description": "Returns room data",
                "operationId": "storeRoom",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/room/id": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get room information",
                "description": "Returns room data",
                "operationId": "getRoomById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Room"
                ],
                "summary": "Update existing room",
                "description": "Returns updated room data",
                "operationId": "updateRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "Delete existing room",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/service": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get list of service",
                "description": "Returns list of service",
                "operationId": "getServiceList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Store new service",
                "description": "Returns service data",
                "operationId": "storeService",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nik,",
                        "in": "path",
                        "description": "nik",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/service/id": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get Service information",
                "description": "Returns service data",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update existing queue",
                "description": "Returns updated queue data",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete existing service",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}